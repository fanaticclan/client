// Fanatic Edition: library.cfg

++ = [$arg1 = (+ (getalias $arg1) 1)]

-- = [$arg1 = (- (getalias $arg1) 1)]

+= = [$arg1 = (+ (getalias $arg1) $arg2)]

-= = [$arg1 = (- (getalias $arg1) $arg2)]

*= = [$arg1 = (* (getalias $arg1) $arg2)]

/= = [$arg1 = (div (getalias $arg1) $arg2)]

+=f = [$arg1 = (+f (getalias $arg1) $arg2)]

-=f = [$arg1 = (-f (getalias $arg1) $arg2)]

*=f = [$arg1 = (*f (getalias $arg1) $arg2)]

/=f = [$arg1 = (divf (getalias $arg1) $arg2)]

&= = [$arg1 = (& (getalias $arg1) $arg2)]

|= = [$arg1 = (| (getalias $arg1) $arg2)]

>>= = [$arg1 = (>> (getalias $arg1) $arg2)]

<<= = [$arg1 = (<< (getalias $arg1) $arg2)]

avg = [
    _lib_res = 0
    loop i $numargs [_lib_res = (+ $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result (div $_lib_res $numargs)
]

avgf = [
    _lib_res = 0
    loop i $numargs [_lib_res = (+f $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result (divf $_lib_res $numargs)
]

sum = [
    _lib_res = 0
    loop i $numargs [_lib_res = (+ $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result $_lib_res
]

sumf = [
    _lib_res = 0
    loop i $numargs [_lib_res = (+f $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result $_lib_res
]

prod = [
    _lib_res = 1
    loop i $numargs [_lib_res = (* $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result $_lib_res
]

prodf = [
    _lib_res = 1
    loop i $numargs [_lib_res = (*f $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result $_lib_res
]

range = [
    _lib_res = ""
    loop i $numargs [_lib_res = (concat $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result (- (do (concat "max" $_lib_res)) (do (concat "min" $_lib_res)))
]

rangef = [
    _lib_res = ""
    loop i $numargs [_lib_res = (concat $_lib_res (getalias (concatword "arg" (+ $i 1))))]
    result (-f (do (concat "maxf" $_lib_res)) (do (concat "minf" $_lib_res)))
]

cot = [divf 1 (tan $arg1)]

sec = [divf 1 (cos $arg1)]

csc = [divf 1 (sin $arg1)]

acot = [atan (divf 1 $arg1)]

asec = [acos (divf 1 $arg1)]

acsc = [asin (divf 1 $arg1)]

sinh = [divf (-f (exp $arg1) (exp (*f $arg1 -1))) 2]

cosh = [divf (+f (exp $arg1) (exp (*f $arg1 -1))) 2]

tanh = [divf (-f (exp $arg1) (exp (*f $arg1 -1))) (+f (exp $arg1) (exp (*f $arg1 -1)))]

coth = [divf (+f (exp $arg1) (exp (*f $arg1 -1))) (-f (exp $arg1) (exp (*f $arg1 -1)))]

sech = [divf 2 (+f (exp $arg1) (exp (*f $arg1 -1)))]

csch = [divf 2 (-f (exp $arg1) (exp (*f $arg1 -1)))]

factorial = [
    _lib_res = 1
    loop i $arg1 [_lib_res = (* $_lib_res (+ $i 1))]
    result $_lib_res
]

lcm = [
    _lib_res = 0
    loopwhile i (+ (* $arg1 $arg2) 1) [(! $_lib_res)] [if (= (+ (mod (+ $i 1) $arg1) (mod (+ $i 1) $arg2))) [_lib_res = (+ $i 1)]]
    result $_lib_res
] 

gcf = [
    _lib_res = 1
    loop i $arg1 [if (= (+ (mod $arg1 (+ $i 1)) (mod $arg2 (+ $i 1)))) [_lib_res = (+ $i 1)]]
    result $_lib_res
]

listfactors = [
    _lib_res = ""
    loop i $arg1 [if (! (mod $arg1 (+ $i 1))) [_lib_res = (concat $_lib_res (+ $i 1))]]
    result (substr $_lib_res 1)
]

listtoargs = [do (concat $arg1 $arg2)]

listinstances = [
    _lib_res = 0
    looplist i $arg1 [_lib_res = (+ $_lib_res (=s $i $arg2))]
    result $_lib_res
]

listpartition = [
    _lib_res = ""
    loop i (+ (div (listlen $arg1) $arg2) (> (mod (listlen $arg1) $arg2) 0)) [
        _lib_res = (concat $_lib_res (format ["%1"] (sublist $arg1 (* $i $arg2) $arg2)))
    ]
    result (substr $_lib_res 1)
]

listreverse = [
    _lib_res = ""
    loop i (listlen $arg1) [_lib_res = (concat $_lib_res (at $arg1 (- (listlen $arg1) (+ $i 1))))]
    result (substr $_lib_res 1)
]

looplistwhile = [
    _lib_res = 1
    looplist $arg1 $arg2 [if (! (arg3)) [_lib_res = 0]; if $_lib_res [arg4]]
]

_event_connect = [
    _connect_tmp = $arg1
    _connect_clients = (listclients)
    sleep 1 [
        if (> (listlen (listclients)) (listlen $_connect_clients)) [_connect_tmp]
        _event_connect $_connect_tmp
    ]
]

_event_death = [
    _death_tmp = $arg1
    if (!=s $_death_tmp "") [
        sleep 1 [
            if (> (getdeaths) @@(getdeaths)) [_death_tmp]
                _event_death $_death_tmp
        ]
    ]
]


_event_flagscore = [
    _flagscore_tmp = $arg1
    if (!=s $_flagscore_tmp "") [
        sleep 5 [
            if (&& [m_ctf (getmode)] [> (getflags) @@(getflags)]) [_flagscore_tmp]
            _event_flagscore $_flagscore_tmp
        ]
    ]
]

_event_frag = [
    _frag_tmp = $arg1
    if (!=s $_frag_tmp "") [
        sleep 1 [
            if (&& [> (getfrags) @@(getfrags)] [=s (mapname) @@(mapname)]) [_frag_tmp]
            _event_frag $_frag_tmp
        ]
    ]
]

_event_inactivity = [
    _inactive_tmp = $arg1
    if (!=s $_inactive_tmp "") [
        sleep 300000 [
            if (= (getcampos) @@(getcampos)) [_inactive_tmp]
            _event_inactivity $_inactive_tmp
        ]
    ]
]

_event_skullscore = [
    _skullscore_tmp = $arg1
    if (!=s $_skullscore_tmp "") [
        sleep 5 [
            if (&& [m_collect (getmode)] [> (getflags) @@(getflags)]) [_skullscore_tmp]
            _event_skullscore $_skullscore_tmp
        ]
    ]
]

_event_suicide = [
    _suicide_tmp = $arg1
    if (!=s $_suicide_tmp "") [
        sleep 5 [
            if (&& [> (getdeaths) @@(getdeaths)] [< (getfrags) @@(getfrags)]) [_suicide_tmp]
            _event_suicide $_suicide_tmp
        ]
    ]
]

_event_teamkill = [
    _teamkill_tmp = $arg1
    if (!=s $_tk_tmp "") [
        sleep 1 [
            if (&& [m_teammode (getmode)] [< (getfrags) @@(getfrags)] [= (getdeaths) @@(getdeaths)] [=s (mapname) @@(mapname)]) [_teamkill_tmp]
            _event_teamkill $_teamkill_tmp
        ]
    ]
]

addclone = [
    addbot $getaccuracy
    servcmd rename 128 $getname
]

alphabet_leetspeak = ["4" "8" "(" "|)" "3" "PH" "6" "|-|" "!" "_|" "|<" "1" "/\/\" "/\/" "0" "9" "0_" "2" "5" "7" "|_|" "\/" "\/\/" "><" "`/" "Z"]

alphabet_lowercase = ["a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"]

alphabet_lowercase_consonants = ["b" "c" "d" "f" "g" "h" "j" "k" "l" "m" "n" "p" "q" "r" "s" "t" "v" "w" "x" "y" "z"]

alphabet_lowercase_vocals = ["a" "e" "i" "o" "u"]

alphabet_uppercase = ["A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z"]

alphabet_uppercase_consonants = ["B" "C" "D" "F" "G" "H" "J" "K" "L" "M" "N" "P" "Q" "R" "S" "T" "V" "W" "X" "Y" "Z"]

alphabet_uppercase_vocals = ["A" "E" "I" "O" "U"]

clearbots = [looplist cn $listclients [if (isai $cn) [delbot]]]

clearpickups = [
    _pickups = ["bullets" "cartridges" "grenades" "riflerounds" "rockets" "shells" "greenarmour" "yellowarmour" "health" "healthboost" "quaddamage"]
    looplist i $_pickups [clearents $i]
]

createine = [if (! (getalias $arg1)) [$arg1 = $arg2]]

demoffw = [
     _p =    $paused; paused 0
     _g = $gamespeed; gamespeed 1000
     sleep (* $arg1 1000) [
         gamespeed $_g
         paused $_p
    ]
]

editcube = [
    loop i $arg1 [
        if @arg3 [sleep (* $i @@arg3) [editface @@@arg2 1]] [editface @arg2 1]
   ]
    if $arg4 [+= $arg4 (* @arg1 @arg3)]
]

getdef = [if $numargs [format "%1 = [%2]" $arg1 $@arg1] [format "getdef = [%1]" $getdef]]

execdir = [loopfiles f $arg1 cfg [exec (format "%1/%2.cfg" $arg1 $f)]]

getcamx = [result (at (getcampos) 0)]

getcamy = [result (at (getcampos) 1)]

getcamz = [result (at (getcampos) 2)]

getcustommaps = [
    m = []
    loopfiles i packages/base ogz [
        if (< (indexof $allmaps $i) 0) [
            m = (concat $m $i)
        ]
    ]
    sortlist $m x y [<=s $x $y]
]

getcustommapslen = [
    m = []
    loopfiles i packages/base ogz [
        if (< (indexof $allmaps $i) 0) [
            m = (concat $m $i)
        ]
    ]
    listlen $m
]

getmaster     = [listfilter i $arg1 [ismaster    $i]]

getadmin      = [listfilter i $arg1 [isadmin     $i]]

getspectator  = [listfilter i $arg1 [isspectator $i]]

getignored    = [listfilter i $arg1 [isignored   $i]]

getbots       = [listfilter i $arg1 [isai        $i]]

get!master    = [listfilter i $arg1 [! (ismaster    $i)]]

get!admin     = [listfilter i $arg1 [! (isadmin     $i)]]

get!spectator = [listfilter i $arg1 [! (isspectator $i)]]

get!ignored   = [listfilter i $arg1 [! (isignored   $i)]]

get!bots      = [listfilter i $arg1 [! (isai        $i)]]

inttorgb = [
   $arg2 = (& (>> $arg1 16) 0xFF)
   $arg3 = (& (>> $arg1 8) 0xFF)
   $arg4 = (& $arg1 0xFF)
]

keydownzoom = [
    zoom 1
    onrelease [
        zoom 0
   ]
]

randomclientname = [getclientname (at (listclients $arg1) (rnd (listlen (listclients $arg1))))]

randomclientnum = [at (listclients $arg1) (rnd (listlen (listclients $arg1)))]

randomlistitem = [at $arg1 (rnd (listlen $arg1))]

rgbtoint = [+ (<< $arg1 16) (<< $arg2 8) $arg3]

rgbtohex = [tohex (rgbtoint $arg1 $arg2 $arg3) 6]

randomrgbcolor = [concat (rnd 255) (rnd 255) (rnd 255)]

setmasterall = [looplist i $listclients [setmaster @arg1 $i]]

sloop = [s = [sleep @arg1 [@@arg2; s]]; s]

sloopid = [$arg2 = [sleep $arg1 [$arg3; $$arg2]]]

spec = [spectator 1 $arg1]

unspec = [spectator 0 $arg1]

specall = [looplist i $(listclients $arg1) [spectator 1 $i]]

unspecall = [looplist i $(listclients $arg1) [spectator 0 $i]]

swapvalues = [
    if (> $numargs 1) [
        [@@arg1] = [@@(getalias $arg2)]
        [@@arg2] = [@@(getalias $arg1)]
    ]
]

uptime = [
    (concatword (
        ? (< (div (getmillis) 3600000) 10) 0) (div (getmillis) 3600000) ":" (
        ? (< (mod (div (getmillis) 60000) 60) 10) 0) (mod (div (getmillis) 60000) 60) ":" (
        ? (< (mod (div (getmillis) 1000) 60) 10) 0) (mod (div (getmillis) 1000) 60)
    )
]

